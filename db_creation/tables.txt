CREATE SCHEMA `jiujitsuassistant` ;


CREATE TABLE `jiujitsuassistant`.`positions` (
  `position_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`position_id`));


CREATE TABLE `jiujitsuassistant`.`techniquegroups` (
  `group_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`group_id`));



CREATE TABLE `jiujitsuassistant`.`techniques` (
  `technique_id` INT NOT NULL AUTO_INCREMENT,
  `group_id` INT NULL,
  `name` VARCHAR(45) NULL,
  `date_learned` DATE NULL,
  `belt_level` VARCHAR(45) NULL,
  `position_from` INT NULL,
  `position_to` INT NULL, `nogi_flag` BOOLEAN NULL,
  PRIMARY KEY (`technique_id`),
  INDEX `fk_position_from_idx` (`position_from` ASC),
  INDEX `fk_position_to_idx` (`position_to` ASC),
  CONSTRAINT `fk_group_id`
    FOREIGN KEY (`technique_id`)
    REFERENCES `jiujitsuassistant`.`techniquegroups` (`group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_position_from`
    FOREIGN KEY (`position_from`)
    REFERENCES `jiujitsuassistant`.`positions` (`position_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_position_to`
    FOREIGN KEY (`position_to`)
    REFERENCES `jiujitsuassistant`.`positions` (`position_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE `jiujitsuassistant`.`setups` (
  `setup_id` INT NOT NULL AUTO_INCREMENT,
  `technique_id` INT NOT NULL,
  `description` VARCHAR(450) NULL,
  PRIMARY KEY (`setup_id`),
  INDEX `fk_technique_id_idx` (`technique_id` ASC),
  CONSTRAINT `fk_technique_id`
    FOREIGN KEY (`technique_id`)
    REFERENCES `jiujitsuassistant`.`techniques` (`technique_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SET foreign_key_checks = 0;

 CREATE TABLE `jiujitsuassistant`.`positionpairs` (
  `my_position_id` INT NOT NULL,
  `opponent_position_id` INT NOT NULL,
  INDEX `fk_my_position_idx` (`my_position_id` ASC),
  INDEX `fk_opposite_position_idx` (`opponent_position_id` ASC),
  CONSTRAINT `fk_my_position`
    FOREIGN KEY (`my_position_id`)
    REFERENCES `jiujitsuassistant`.`positions` (`position_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_opposite_position`
    FOREIGN KEY (`opponent_position_id`)
    REFERENCES `jiujitsuassistant`.`positions` (`position_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
